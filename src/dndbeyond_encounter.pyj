from settings import getDefaultSettings, getStoredSettings
from dndbeyond import Monster, removeRollButtons
from constants import BUTTON_STYLE_CSS
from utils import isExtensionDisconnected, injectCSS, alertFullSettings

print("Beyond20: D&D Beyond Encounter module loaded.")

settings = getDefaultSettings()
last_monster_name = ""
character = None

def documentModified(mutations, observer):
    nonlocal settings
    nonlocal last_monster_name
    nonlocal character

    if isExtensionDisconnected():
        console.log("This extension is DOWN!")
        observer.disconnect()
        return

    monster = $(".encounter-details-monster-summary-info-panel")
    monster_name = monster.find(".mon-stat-block__name").text()
    console.log("Doc modified, new mon : ", monster_name, " !=?", last_monster_name)
    if monster_name == last_monster_name:
        return
    last_monster_name = monster_name
    removeRollButtons()
    character = Monster("Monster", global_settings=settings)
    character.parseStatBlock(monster)

def updateSettings(new_settings=None):
    nonlocal settings
    nonlocal character

    if new_settings:
        settings = new_settings
        if character is not None:
            character.setGlobalSettings(settings)
    else:
        getStoredSettings(def(saved_settings):
            nonlocal settings
            updateSettings(saved_settings)
            documentModified()
        )

def handleMessage (request, sender, sendResponse):
    if request.action == "settings":
        if request.type == "general":
            updateSettings(request.settings)
    elif request.action == "open-options":
        alertFullSettings()

updateSettings()
injectCSS(BUTTON_STYLE_CSS)
chrome.runtime.onMessage.addListener(handleMessage)
observer = new window.MutationObserver(documentModified)
observer.observe(document, {"subtree": True, "childList": True})
chrome.runtime.sendMessage({"action": "activate-icon"})
