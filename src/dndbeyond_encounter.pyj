from settings import getDefaultSettings, getStoredSettings
from dndbeyond import Monster, removeRollButtons
from constants import BUTTON_STYLE_CSS
from utils import isExtensionDisconnected, injectCSS

print("Beyond20: D&D Beyond Encounter module loaded.")

settings = getDefaultSettings()
last_monster_name = ""

def documentModified(mutations, observer):
    nonlocal settings
    nonlocal last_monster_name

    if isExtensionDisconnected():
        console.log("This extension is DOWN!")
        observer.disconnect()
        return

    monster = $(".encounter-details-monster-summary-info-panel")
    monster_name = monster.find(".mon-stat-block__name").text()
    console.log("Doc modifier, new mon : ", monster_name, " !=?", last_monster_name)
    if monster_name == last_monster_name:
        return
    last_monster_name = monster_name
    removeRollButtons()
    character = Monster("Monster")
    character.parseStatBlock(monster, add_dice=settings['handle-stat-blocks'], inject_descriptions=settings['subst-dndbeyond-stat-blocks'])

def updateSettings(new_settings=None):
    nonlocal settings
    if new_settings:
        settings = new_settings
    else:
        getStoredSettings(def(saved_settings):
            nonlocal settings
            settings = saved_settings
            documentModified()
        )

def handleMessage (request, sender, sendResponse):
    if request.action == "settings":
        if request.type == "general":
            updateSettings(request.settings)

updateSettings()
injectCSS(BUTTON_STYLE_CSS)
chrome.runtime.onMessage.addListener(handleMessage)
observer = new window.MutationObserver(documentModified)
observer.observe(document, {"subtree": True, "childList": True})
chrome.runtime.sendMessage({"action": "activate-icon"})
