from utils import sendCustomEvent, injectPageScript
from settings import getDefaultSettings, getStoredSettings

def updateSettings(new_settings=None):
    nonlocal settings
    if new_settings:
        settings = new_settings
    else:
        getStoredSettings(def(saved_settings):
                              updateSettings(saved_settings)
                          )

def handleMessage (request, sender, sendResponse):
    nonlocal settings

    print("Got message : ", request)
    if request.action == "settings":
        if request.type == "general":
            updateSettings(request.settings)
    elif request.action == "hp-update":
        if settings["update-hp"]:
            sendCustomEvent("UpdateHP", (request.character.name, request.character.hp, request.character["max-hp"]))
    elif request.action == "roll":
        sendCustomEvent("Roll", (request, settings))

# Don't execute any code unless we're sure we're loaded in FVTT
if "Foundry Virtual Tabletop" in document.title:
    print("Beyond20: Foundry VTT module loaded.")
    sendCustomEvent("disconnect")
    injectPageScript(chrome.runtime.getURL('src/fvtt_script.js'))
    settings = getDefaultSettings()
    updateSettings()
    chrome.runtime.onMessage.addListener(handleMessage)
    chrome.runtime.sendMessage({"action": "activate-icon"})
    chrome.runtime.sendMessage({"action": "register-fvtt-tab"})
