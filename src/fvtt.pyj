from utils import sendCustomEvent, injectPageScript, alertQuickSettings, alertFullSettings
from settings import getDefaultSettings, getStoredSettings
from elementmaker import E

print("Beyond20: Foundry VTT module loaded.")

settings = getDefaultSettings()

def updateSettings(new_settings=None):
    nonlocal settings
    if new_settings:
        settings = new_settings
        sendCustomEvent("NewSettings", (settings, chrome.runtime.getURL("")))
    else:
        getStoredSettings(def(saved_settings):
                              updateSettings(saved_settings)
                          )

def handleMessage (request, sender, sendResponse):
    nonlocal settings

    print("Got message : ", request)
    if request.action == "settings":
        if request.type == "general":
            updateSettings(request.settings)
    elif request.action == "open-options":
        alertFullSettings()
    elif request.action == "hp-update":
        if settings["update-hp"]:
            sendCustomEvent("UpdateHP", (request.character.name, request.character.hp, request.character["max-hp"], request.character["temp-hp"]))
    elif request.action == "conditions-update":
        if settings["display-conditions"]:
            sendCustomEvent("UpdateConditions", (request, request.character.name, request.character.conditions, request.character.exhaustion))
    elif request.action == "roll":
        sendCustomEvent("Roll", (request, 0))

def titleSet(mutations, observer):
    updateSettings()
    chrome.runtime.onMessage.addListener(handleMessage)
    chrome.runtime.sendMessage({"action": "register-fvtt-tab"})
    injectSettingsButton()
    observer.disconnect()

def injectSettingsButton():
    $(".beyond20-settings").remove()
    
    icon = chrome.extension.getURL("images/icons/icon24.png")
    button = E.div(class_="beyond20-settings", style="flex-grow: 0;",
        E.img(class_="beyond20-settings-logo", src=icon, style="margin: 0px 5px; border: 0px;")
    )
    $("#chat-controls").append(button)
    $(button).on('click', def(event): alertQuickSettings();)



observer = new window.MutationObserver(titleSet)
observer.observe(document.getElementsByTagName("title")[0], {"childList": True})
sendCustomEvent("disconnect")
injectPageScript(chrome.runtime.getURL('src/fvtt_script.js'))
