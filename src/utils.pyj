import re

ROLL20_URL = "*://app.roll20.net/editor/"
DNDBEYOND_URL = "*://*.dndbeyond.com/*characters/*"

def replaceRollsCallback(match, modifiers_only, pre, dice, post, keep_original, pre_original, post_original, pre_dice, post_dice):
    if modifiers_only and match.string[match.start() - 1] in list(map(str, range(0, 10))):
        return match.group(0)

    result = match.group(pre) if pre > 0 else ""
    if keep_original:
        result += pre_original
        for i in range(dice, post):
            result += match.group(i)
        result += post_original
    
    result += pre_dice
    for i in range(dice, post):
        result += match.group(i)
    result += post_dice
    result += match.group(post) if post < 100 else ""
    return result

def replaceRolls(modifiers_only, text, keep_original=False, pre_original="", post_original="", pre_dice="", post_dice=""):
    dice_regexp = "(^|[^\w])([0-9]*d[0-9]+)((?:\s*[-+]\s*[0-9]+)?)($|[^\w])"
    modifiers_regexp = "(\s+)([-+]\s*[0-9]+)($|[^\w])"
    if modifiers_only:
        regexp = modifiers_regexp
        pre = 1
        dice = 2
        post = 3
    else:
        regexp = dice_regexp
        pre = 1
        dice = 2
        post = 4
    new_text = re.sub(regexp, def(m):
        return replaceRollsCallback(m, modifiers_only, pre, dice, \
                                        post, keep_original, pre_original, post_original, pre_dice, post_dice)
    ,
    text)

    
    return new_text

def subRolls(text, keep_original=False, escape=False):
    if keep_original and escape:
        pre_original="["
        post_original="]"
        pre_dice="(!&#13;&#91;&#91;"
        post_dice="&#93;&#93;)"
    else:
        pre_original=""
        post_original=""
        pre_dice="[["
        post_dice="]]"
    text = replaceRolls(False, text, keep_original, pre_original, post_original, pre_dice, post_dice)
    return replaceRolls(True, text, keep_original, pre_original, post_original, pre_dice + "1d20 ", post_dice)

# Taken from https://stackoverflow.com/questions/45985198/the-best-practice-to-detect-whether-a-browser-extension-is-running-on-chrome-or
def getBrowser():
    if jstype(chrome) != "undefined":
        if jstype(browser) != "undefined":
            return "Firefox"
        else:
            return "Chrome"
    else:
        return "Edge"


# Taken from https://stackoverflow.com/questions/9515704/insert-code-into-the-page-context-using-a-content-script
def injectPageScript(url):
    s = document.createElement('script');
    s.src = url;
    s.onload = def():
        this.remove()
    (document.head or document.documentElement).appendChild(s);

def sendCustomEvent(name, data):
    event = new CustomEvent("Beyond20_" + name, {"detail": data})
    document.dispatchEvent(event)

def addCustomEventListener(name, callback):
    cb = def(evt):
        callback(*evt.detail)
    event = ["Beyond20_" + name, cb, False]
    document.addEventListener(*event)
    return event

def roll20TabTitle(tab):
    return tab.title.replace(" | Roll20", "")
