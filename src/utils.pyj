import re

ROLL20_URL = "*://app.roll20.net/editor/"
DNDBEYOND_CHARACTER_URL = "*://*.dndbeyond.com/*characters/*"
DNDBEYOND_MONSTER_URL = "*://*.dndbeyond.com/monsters/*"
DNDBEYOND_ENCOUNTER_URL = "*://*.dndbeyond.com/encounters/*"
DNDBEYOND_SPELL_URL = "*://*.dndbeyond.com/spells/*"
DNDBEYOND_VEHICLE_URL = "*://*.dndbeyond.com/vehicles/*"
CHANGELOG_URL = "https://kakaroto.github.io/Beyond20/update"

def replaceRollsCallback(match, replaceCB):
    dice = match.group(2)
    modifiers = match.group(3)
    if not dice?:
        dice = ""
        modifiers = match.group(4)

    result = match.group(1)
    result += replaceCB(dice, modifiers)
    result += match.group(5)
    return result

def replaceRolls(text, replaceCB):
    dice_regexp = "(^|[^\w])(?:(?:(?:(\d*d\d+)((?:\s*[-+]\s*\d+)*))|((?:[-+]\s*\d+)+)))($|[^\w])"
    return re.sub(dice_regexp, def(m):
        return replaceRollsCallback(m, replaceCB)
    , text)

# Taken from https://stackoverflow.com/questions/45985198/the-best-practice-to-detect-whether-a-browser-extension-is-running-on-chrome-or
def getBrowser():
    if jstype(chrome) != "undefined":
        if jstype(browser) != "undefined":
            return "Firefox"
        else:
            return "Chrome"
    else:
        return "Edge"

def isExtensionDisconnected():
    try:
        chrome.extension.getURL("")
        return False
    except:
        return True

# Taken from https://stackoverflow.com/questions/9515704/insert-code-into-the-page-context-using-a-content-script
def injectPageScript(url):
    s = document.createElement('script');
    s.src = url;
    s.onload = def():
        this.remove()
    (document.head or document.documentElement).appendChild(s);

def injectCSS(css):
    s = document.createElement('style');
    s.textContent = css;
    (document.head or document.documentElement).appendChild(s);

def sendCustomEvent(name, data):
    if getBrowser() == "Firefox":
        data = cloneInto(data, window)
    event = new CustomEvent("Beyond20_" + name, {"detail": data})
    document.dispatchEvent(event)

def addCustomEventListener(name, callback):
    cb = def(evt):
        callback(*evt.detail)
    event = ["Beyond20_" + name, cb, False]
    document.addEventListener(*event)
    return event

def roll20TabTitle(tab):
    return tab.title.replace(" | Roll20", "")
